<%- include('../partials/adminSideNav.ejs') %>
    <div class="container" id="addcategory-container">
        <div class="row px-5 pt-2">
          <div id="formErrors" class="text-danger" style="display: none;"></div>
          <form id="addCategoryForm" class="row g-3">
        
      
            <div class="col-md-6">
              <input
                type="text"
                name="categoryName"
                placeholder="CATEGORY NAME"
                class="form-control add-category"
              />
              <div id="categoryNameError" class="text-danger"></div>
            </div>
      
            <div class="col-md-12">
              <button
                type="submit"
                id="add-category"
                class="btn p-2 mt-3 mb-3 btn-success"
              >ADD CATEGORY</button>
            </div>
      
          </form>
        </div>
      </div>
      

  <script>
    
    document.getElementById('addCategoryForm').addEventListener('submit', async function(e) {
  e.preventDefault();

  const formData = new FormData(this);
  const formObject = Object.fromEntries(formData.entries());

  try {
    const response = await fetch('/admin/category/add-category', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(formObject)
    });

    const data = await response.json();

    // Clear previous errors
    document.querySelectorAll('.text-danger').forEach(el => el.innerHTML = '');
    document.getElementById('formErrors').style.display = 'none';

    if (response.ok) {
      window.location.href = '/admin/category';
    } else {
      // Display validation errors
      if (data.errors) {
        for (const key in data.errors) {
          document.getElementById(`${key}Error`).innerHTML = data.errors[key].msg;
        }
      }
      // Display custom errors
      if (data.customError) {
        document.getElementById('formErrors').style.display = 'block';
        document.getElementById('formErrors').innerHTML = data.customError;
      }
      setTimeout(() => {
        document.querySelectorAll('.text-danger').forEach(el => el.innerHTML = '');
        document.getElementById('formErrors').style.display = 'none';
      }, 3000);
    }
  } catch (error) {
    console.error('Error:', error);
  }
});


    document.addEventListener("DOMContentLoaded", function () {
      const hamBurger = document.querySelector(".toggle-btn");
      hamBurger.addEventListener("click", function () {
        document.querySelector("#sidebar").classList.toggle("expand");
      });
  
  
    });
  
  </script>