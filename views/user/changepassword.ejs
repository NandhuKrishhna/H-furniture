<style>
    body {
        background-color: #f8f9fa;
    }

    .login-form {
        background: #ffffff;
        border-radius: 10px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }

    .login-form h3 {
        font-weight: bold;
    }


    .form-control {
        border-radius: 5px;
        border: 1px solid #ced4da;
        /* Default border color */
    }

    /* Apply styles to form-control on focus */
    .form-control:focus {
        border-color: #ced4da;
        /* Border color when focused */
        box-shadow: none;
        /* Remove default shadow */
        outline: none;
        /* Remove default outline */
    }


    .btn-block {
        border-radius: 5px;
    }

    .alert-danger {
        background: none;
        border: none;
        color: red;
        padding: 0;
        font-weight: bold;
        margin-bottom: 29px;
        margin-top: -5px;
    }

    .form-group {
        position: relative;
        margin-bottom: 2rem;
    }

    .form-group label {
        position: absolute;
        top: 0;
        left: 0;
        padding: 0.75rem 0;
        pointer-events: none;
        transition: all 0.2s ease-out;
        font-size: 1rem;
        color: #aaa;
    }

    .form-group input:focus+label,
    .form-group input:not(:placeholder-shown)+label {
        top: -2rem;
        left: 0;
        color: #000;
        font-size: 0.85rem;
        padding-left: 5px;
    }

    .form-group input {
        padding: 0.75rem 0.75rem 0.25rem;
    }

    .text-danger {
        color: red;
        font-weight: bold;
    }
    .position-relative {
  position: relative;
}

.toggle-password {
  position: absolute;
  top: 50%;
  right: 10px;
  transform: translateY(-50%);
}

</style>
<div class="container">
    <div class="row align-items-center min-vh-100">
        <div class="col-md-6 d-none d-md-block">
            <img src="/images/blocks-P5mBXg1sFDA-unsplash.jpg" class="img-fluid" alt="Responsive image">
        </div>
        <div class="col-md-6">
            <div class="login-form p-4">
              <h3 class="mb-4 text-center">Reset Password</h3>
              <div id="formErrors" class="alert alert-danger" style="display:none;"></div>
              <form id="passwordForm">
                <div class="form-group position-relative">
                  <input type="password" class="form-control" id="newpassword" name="newPassword" placeholder=" ">
                  <label for="newpassword">New Password</label>
                  <i class="fa-solid fa-eye-slash toggle-password" id="toggleNewPassword" style="cursor:pointer;"></i>
                  <div id="newpasswordError" class="text-danger"></div>
                </div>
                <div class="form-group position-relative">
                  <input type="password" class="form-control" id="confirmPassword" name="confirmPassword" placeholder=" ">
                  <label for="confirmPassword">Confirm Password</label>
                  <i class="fa-solid fa-eye-slash toggle-password" id="toggleConfirmPassword" style="cursor:pointer;"></i>
                  <div id="confirmPasswordError" class="text-danger"></div>
                </div>
                <div class="mt-3">
                  <button type="submit" class="btn btn-dark btn-block">Reset</button>
                </div>
                <div class="text-center mt-2">
                  <a href="/user/login" class="text-dark">Back to Login</a>
                </div>
              </form>
            </div>
          </div>
          
    </div>
</div>
<script>
    document.getElementById('toggleNewPassword').addEventListener('click', function() {
  const passwordField = document.getElementById('newpassword');
  const type = passwordField.getAttribute('type') === 'password' ? 'text' : 'password';
  passwordField.setAttribute('type', type);
  this.classList.toggle('fa-eye');
  this.classList.toggle('fa-eye-slash');
});

document.getElementById('toggleConfirmPassword').addEventListener('click', function() {
  const passwordField = document.getElementById('confirmPassword');
  const type = passwordField.getAttribute('type') === 'password' ? 'text' : 'password';
  passwordField.setAttribute('type', type);
  this.classList.toggle('fa-eye');
  this.classList.toggle('fa-eye-slash');
});

document.getElementById('passwordForm').addEventListener('submit', async function(e) {
    e.preventDefault();
    
    const formData = new FormData(this);
    const formObject = Object.fromEntries(formData.entries());
    
    try {
      const response = await fetch("/user/change_password", {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(formObject)
      });
      
      const data = await response.json();
      
      // Clear previous errors
      document.querySelectorAll('.text-danger').forEach(el => el.innerHTML = '');
      document.getElementById('formErrors').style.display = 'none';

      if (response.ok) {
        const Toast = Swal.mixin({
          toast: true,
          position: 'top-end',
          showConfirmButton: false,
          timer: 1500,
          timerProgressBar: true,
          didOpen: (toast) => {
            toast.onmouseenter = Swal.stopTimer;
            toast.onmouseleave = Swal.resumeTimer;
          }
        });
      
        Toast.fire({
          icon: 'success',
          title: 'Password changed successfully'
        }).then(() => {
          window.location.href =data.redirectUrl || '/user/login';
        });
      }
      else {
        // Display validation errors
        if (data.errors) {
          for (const key in data.errors) {
            document.getElementById(`${key}Error`).innerHTML = data.errors[key].msg;
          }
        }
        // Display custom errors
        if (data.customError) {
          document.getElementById('formErrors').style.display = 'block';
          document.getElementById('formErrors').innerHTML = data.customError;
        }
        setTimeout(() => {
          document.querySelectorAll('.text-danger').forEach(el => el.innerHTML = '');
          document.getElementById('formErrors').style.display = 'none';
        }, 3000); 
      }
    } catch (error) {
      console.error('Error:', error);
    }
  });

</script>