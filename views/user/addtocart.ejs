  <style>
    .cart-item img {
      max-width: 100px;
      margin-right: 10px;
    }
    .cart-summary {
      background: #f9f9f9;
      padding: 20px;
      border-radius: 5px;
    }
    .total-amount {
      font-size: 24px;
      font-weight: bold;
      color: #000;
    }
    .total-savings {
      color: green;
      font-weight: bold;
    }
    .cart{
      margin-top: 60px;
    }
  </style>

<div class="container my-5">
  <div class="row">
    <div class="col-md-8">
      <h2>Shopping Cart</h2>
      <% if (userInfo && products.length > 0) { %>
        <% products.forEach(product => { %>
          <div class="cart-item d-flex align-items-center my-4 p-3 border">
            <div class="d-flex flex-column align-items-center">
              <img src="/<%= product.images[0] %>" alt="Product Image" class="img-fluid" style="width: 100px;">
              <button class="btn btn-link text-danger mt-2 remove-item" data-product-id="<%= product._id %>">
                <i class="fa-solid fa-trash-can"></i> Remove
              </button>
            </div>
            <div class="ml-3">
              <h5><%= product.productName %></h5>
              <p>Expected Dispatch Date: <span style="color: green;">Sep 09, 2024</span></p>
              <div class="d-flex align-items-center">
                <button class="btn btn-outline-secondary btn-sm decrement-quantity" data-product-id="<%= product._id %>">-</button>
                <input type="text" class="form-control text-center mx-2" value="<%= product.quantity %>" style="width: 50px;" id="quantity-<%= product._id %>">
                <button class="btn btn-outline-secondary btn-sm increment-quantity" data-product-id="<%= product._id %>">+</button>
              </div>
            </div>
            <div class="ml-auto text-right">
              <h4 class="text-dark" id="price-<%= product._id %>">₹<%= product.price.toFixed(2) %></h4>
            </div>
          </div>
        <% }); %>
      <% } else { %>
        <p>Your cart is empty.</p>
         <a href="/user/products" class="btn btn-dark" style="border-radius:0;">Shop Now</a>
      <% } %>
    </div>
    <div class="col-md-4 cart">
      <div class="cart-summary">
        <h5>Apply Coupon Code</h5>
        <div class="input-group mb-3">
          <input type="text" class="form-control" placeholder="Enter Coupon Code">
          <div class="input-group-append">
            <button class="btn btn-dark">Apply</button>
          </div>
        </div>
        <h5>Cart Summary</h5>
        <ul class="list-unstyled">
          <li class="d-flex justify-content-between">
            <span>SubTotal</span>
            <span>₹<%= total.toFixed(2) %></span>
          </li>
        </ul>
        <p>Packing Charges: <span class="float-right">₹0</span></p>
        <% if (!!products.length) { %>
          <p>Shipping & Handling: <span class="float-right"><del>₹0</del></span></p>
        <% } %>
        <p>Shipping & Handling: <span class="float-right"><del>₹4,000</del> FREE</span></p>
        <p>Negotiated Discount: <span class="float-right">₹0</span></p>
        <div class="d-flex justify-content-between">
          <span>Total Amount</span>
          <span class="total-amount">₹<%= total.toFixed(2) %></span>
        </div>
        <div class="d-flex justify-content-between">
          <span>Total Savings</span>
          <span class="total-savings">₹<%= savings.toFixed(2) %></span>
        </div>
        <button class="btn btn-dark btn-block mt-3" 
                onclick="proceedToCheckout(`<%= hadAddress ? 'true' : 'false' %>`, '<%= userInfo._id %>')" 
                <%= products.length === 0 ? 'disabled' : '' %>>
          Proceed to Checkout
        </button>
        <small class="text-muted d-block mt-2">By continuing to Checkout, you agree to Habus's Terms of Use and Privacy Policy.</small>
      </div>
    </div>
  </div>
</div>

<script>
document.querySelectorAll('.remove-item').forEach(button => {
  button.addEventListener('click', () => {
    const productId = button.dataset.productId;
    const userId = button.dataset.userId; // Ensure this is included in your HTML

    // Log product ID for debugging
    console.log(`Remove item with ID: ${productId}`);

    // Make AJAX request to remove the item
    $.ajax({
      url: `/user/cart/${productId}`, // Updated URL
      type: 'DELETE',
      success: function(response) {
        if (response.success) {
          location.reload();
          console.log('Product removed successfully.');
          
          document.getElementById(`cart-item-${productId}`).remove();
          
        } else {
     
          console.error('Failed to remove product from cart:', response.message || 'No message provided');
        }
      },
      error: function(xhr, status, error) {
        // Handle AJAX error
        console.error('An error occurred:', status, error);
        console.error('Response:', xhr.responseText); // Log the full response for debugging
      }
    });
  });
});



$(document).ready(function () {
  $(document).on("click", ".increment-quantity", function () {
    const productId = $(this).data("product-id");
    const quantityInput = $(`#quantity-${productId}`);
    let quantity = parseInt(quantityInput.val()) + 1;
    quantityInput.val(quantity);

    updateCartQuantity(productId, quantity);
  });

  $(document).on("click", ".decrement-quantity", function () {
    const productId = $(this).data("product-id");
    const quantityInput = $(`#quantity-${productId}`);
    let quantity = parseInt(quantityInput.val());

    if (quantity > 1) {
      quantity -= 1;
      quantityInput.val(quantity);
      updateCartQuantity(productId, quantity);
    }
  });
});

function updateCartQuantity(productId, quantity) {
  $.ajax({
    url: `/user/cart/${productId}`,
    method: "PUT",
    contentType: "application/json",
    data: JSON.stringify({ quantity }),
    success: function (response) {
      console.log('Cart updated successfully', response);
      $(`#price-${productId}`).text(`₹${response.updatedProductPrice.toFixed(2)}`);
      $(`#original-price-${productId}`).text(`₹${response.updatedOriginalPrice.toFixed(2)}`);
      $('.total-amount').text(`₹${response.cartTotal.toFixed(2)}`);
    },
    error: function (error) {
      console.error('Error updating cart:', error);
    }
  });
}



function proceedToCheckout(hadAddress, userId) {
  if (hadAddress === 'true') {
    window.location.href = `/user/checkout_address_details/${userId}`;
  } else {
    window.location.href = `/user/add_checkout_address/${userId}`;
  }
}

</script>





